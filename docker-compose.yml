services:
    backend:
        build:
            context: .
            dockerfile: .docker/dev/Dockerfile
        container_name: dotnet-backend
        ports:
            - "5001:5001"
        volumes:
            - .:/app
        working_dir: /app
        command: >
            sh -c "
                dotnet restore &&
                dotnet tool install --global dotnet-ef &&
                dotnet dev-certs https &&
                dotnet dev-certs https --trust &&
                # dotnet watch run --urls https://0.0.0.0:5001 --project Book_API/Book_API.csproj
                dotnet watch run --urls https://0.0.0.0:5001 --project Book_Lambda/src/Book_Lambda.csproj
            "
        depends_on:
            - database

    # mysql:
    #     image: mysql:8.0
    #     container_name: mysql-db
    #     ports:
    #         - "3306:3306"
    #     environment:
    #         - MYSQL_ROOT_PASSWORD=your_password
    #         - MYSQL_DATABASE=your_database_name
    #     volumes:
    #         - database-data:/var/lib/mysql

    database:
        image: postgres:13
        container_name: postgres-db
        ports:
            - "5432:5432"
        environment:
            - POSTGRES_PASSWORD=your_password
            - POSTGRES_DB=your_database_name
        volumes:
            - database-data:/var/lib/postgresql/data
        # command:
        #     - /bin/sh
        #     - -c
        #     - |
        #       echo 'host    all             all             0.0.0.0/0               trust' >> /var/lib/postgresql/data/pg_hba.conf
        #       exec docker-entrypoint.sh postgres -c 'config_file=/var/lib/postgresql/data/postgresql.conf'

volumes:
    database-data:
