// <auto-generated />
using System;
using Book_EF.EntityModels;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Book_EF.Migrations
{
    [DbContext(typeof(BookContext))]
    [Migration("20210213085739_InitialModel")]
    partial class InitialModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Book_EF.EntityModels.Author", b =>
                {
                    b.Property<int>("AuthorCd")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("author_cd")
                        .HasColumnType("int(11)");

                    b.Property<string>("AuthorName")
                        .HasColumnName("author_name")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("AuthorCd")
                        .HasName("PRIMARY");

                    b.ToTable("author");
                });

            modelBuilder.Entity("Book_EF.EntityModels.Book", b =>
                {
                    b.Property<int>("Autonumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("autonumber")
                        .HasColumnType("int(11)");

                    b.Property<int?>("AuthorCd")
                        .HasColumnName("author_cd")
                        .HasColumnType("int(11)");

                    b.Property<int?>("ClassCd")
                        .HasColumnName("class_cd")
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("Date")
                        .HasColumnName("date")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteFlg")
                        .HasColumnName("delete_flg")
                        .HasColumnType("char(1)")
                        .IsFixedLength(true)
                        .HasMaxLength(1);

                    b.Property<int?>("PageCount")
                        .HasColumnName("page_count")
                        .HasColumnType("int(11)");

                    b.Property<string>("PublishYear")
                        .HasColumnName("publish_year")
                        .HasColumnType("varchar(4)")
                        .HasMaxLength(4);

                    b.Property<int?>("PublisherCd")
                        .HasColumnName("publisher_cd")
                        .HasColumnType("int(11)");

                    b.Property<string>("RecommendFlg")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("recommend_flg")
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("'0'")
                        .IsFixedLength(true)
                        .HasMaxLength(1);

                    b.Property<string>("Title")
                        .HasColumnName("title")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500);

                    b.HasKey("Autonumber")
                        .HasName("PRIMARY");

                    b.HasIndex("Autonumber")
                        .HasName("autonumber");

                    b.ToTable("book");
                });

            modelBuilder.Entity("Book_EF.EntityModels.Class", b =>
                {
                    b.Property<int>("ClassCd")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("class_cd")
                        .HasColumnType("int(11)");

                    b.Property<string>("ClassName")
                        .HasColumnName("class_name")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("ClassCd")
                        .HasName("PRIMARY");

                    b.ToTable("class");
                });

            modelBuilder.Entity("Book_EF.EntityModels.Publisher", b =>
                {
                    b.Property<int>("PublisherCd")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("publisher_cd")
                        .HasColumnType("int(11)");

                    b.Property<string>("PublisherName")
                        .HasColumnName("publisher_name")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("PublisherCd")
                        .HasName("PRIMARY");

                    b.ToTable("publisher");
                });
#pragma warning restore 612, 618
        }
    }
}
